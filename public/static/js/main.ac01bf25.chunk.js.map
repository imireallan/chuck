{"version":3,"sources":["queries/index.js","components/globalStyles.js","components/JokeItem/style.js","components/JokeItem/index.js","components/Category/style.js","components/Category/index.js","components/Categories/style.js","components/Categories/index.js","components/Home/style.js","components/Home/index.js","components/Header.js","components/NotFoundPage.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["GET_CATEGORIES","gql","GET_JOKE","sizes","small","medium","large","extraLarge","media","width","Object","keys","reduce","acc","label","css","Joke","styled","div","Wrapper","section","Subtitle","Link","a","Value","Button","button","ImageContainer","figure","Image","img","JokeItem","category","useContext","MyContext","useQuery","variables","skip","notifyOnNetworkStatusChange","loading","error","data","refetch","networkStatus","className","type","color","src","jokes","icon_url","alt","value","href","url","onClick","CategoryItem","h4","CategoryLink","Category","handleCategory","e","preventDefault","Title","Categories","Fragment","categories","map","key","Home","main","Sidebar","Main","h2","React","createContext","MyProvider","children","useState","setCategory","Provider","HomeComponent","Header","NotFoundPage","Routes","path","to","exact","component","client","ApolloClient","uri","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ac01bf25.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\n\nconst GET_CATEGORIES = gql`\n  {\n    categories\n  }\n`;\n\nconst GET_JOKE = gql`\n  query Joke($category: String!){\n    jokes(category: $category) {\n      id,\n      value,\n      categories,\n      icon_url,\n      url,\n    }\n  }\n`;\n\nexport {\n  GET_CATEGORIES,\n  GET_JOKE\n};","import { css } from 'styled-components'\n\nconst sizes = {\n    small: 600,\n    medium:600,\n    large:992,\n    extraLarge:1200\n}\n\n/*\n code snipped borroed from medium article\n https://medium.com/@samuelresua/easy-media-queries-in-styled-components-690b78f50053\n*/ \n\nconst media = (width) => Object.keys(sizes).reduce((acc, label) => {\n    acc[label] = (...args) => css`\n       @media (${width}: ${sizes[label]}px) {\n          ${css(...args)};\n       }\n    `\n    return acc\n }, {})\n\n\n export default media","import styled from 'styled-components';\nimport media from '../../components/globalStyles';\n\nconst Joke = styled.div`\n\tbackground: var(--color-grey-lt);\n\tpadding: 2em;\n\tmargin: 1em 0;\n\tborder-radius: 8px;\n\tbox-shadow: 0 4px 8px rgba(0, 0, 0, .23);\n\ttransition: all 100ms cubic-bezier(0.4, 0, 0.2, 1);\n\tmin-width: 200px;\n\t&:hover {\n\t\tbox-shadow: 0 0 2px rgba(0, 0, 0, .23);\n\t\ttransform: perspective(100px) translateZ(3px);\n\t}\n\t${media('max-width').small`\n        padding: 1em;\n\n    `};\n\t${media('min-width').small`\n        max-width: 300px;\n        width: 70%;\n        padding: 1em;\n        margin: 0 0 .5em 0;\n`};\n`;\n\nJoke.Wrapper = styled.section`\n\tpadding: 3em;\n\ttext-align: center;\n\tflex-direction: column;\n\talign-items: center;\n\t${media('max-width').small`\n        padding: 1em;\n\n    `};\n`;\n\nJoke.Subtitle = styled.div`\n\tpadding: 5em 0;\n\tdisplay: grid;\n\tplace-items: center;\n\tcolor: var(--color-orange);\n\t${media('max-width').small`\n        padding: 1em;\n\t\tfont-size: 0.9rem\n\n    `};\n`;\n\nJoke.Link = styled.a`\n\tdisplay: inline-block;\n\tcolor: var(--color-white);\n\tfont-weight: bold;\n\tpadding: .5em 1em;\n\tbackground: var(--color-orange);\n\tmargin: 1em 0;\n`;\n\nJoke.Value = styled.div`\n\tmargin: 1em 0;\n\tcolor: rgb(0, 128, 128);\n`;\n\nJoke.Button = styled.button`\n\tpadding: 1em 2em;\n\tcolor: #333;\n\tbackground: transparent;\n\tborder: none;\n\toutline: none;\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\tborder-radius: 3px;\n\tbox-shadow: 0 0 4px 0 rgba(255, 153, 0, 0.7);\n\ttransition: background 300ms linear;\n\tmargin: 1em;\n\t&:hover,\n\t&:focus {\n\t\tcolor: var(--color-white);\n\t\tbackground: var(--color-orange);\n\t}\n`;\n\nJoke.ImageContainer = styled.figure`width: 100%;`;\n\nJoke.Image = styled.img`width: 50%;`;\n\nexport default Joke;\n","import React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport Loader from 'react-loader-spinner';\n\nimport { GET_JOKE } from '../../queries';\nimport { MyContext } from '../Home';\nimport Joke from './style';\n\nfunction JokeItem() {\n\tconst { category } = useContext(MyContext);\n\tconst { loading, error, data, refetch, networkStatus } = useQuery(GET_JOKE, {\n\t\tvariables: { category },\n\t\tskip: !category,\n\t\tnotifyOnNetworkStatusChange: true\n\t});\n\n\tif (loading || networkStatus === 4) {\n\t\treturn <Loader className=\"jokes__loader\" type=\"Bars\" color=\"rgb(255, 153, 0)\" />;\n\t}\n\n\tif (error) return `Error! ${error}`;\n\treturn (\n\t\t<div>\n\t\t\t{category ? (\n\t\t\t\t<Joke.Wrapper className=\"container flex\">\n\t\t\t\t\t<Joke>\n\t\t\t\t\t\t<Joke.ImageContainer>\n\t\t\t\t\t\t\t<Joke.Image src={data.jokes.icon_url} alt=\"joke avatar\" />\n\t\t\t\t\t\t</Joke.ImageContainer>\n\t\t\t\t\t\t<div className=\"joke__value\">\n\t\t\t\t\t\t\t<p>{data.jokes.value}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Joke.Link href={data.jokes.url}>visit joke</Joke.Link>\n\t\t\t\t\t</Joke>\n\t\t\t\t\t<Joke.Button onClick={() => refetch()}>Fetch another joke</Joke.Button>\n\t\t\t\t</Joke.Wrapper>\n\t\t\t) : (\n\t\t\t\t<Joke.Subtitle>\n\t\t\t\t\t<h3>Click a Category</h3>\n\t\t\t\t</Joke.Subtitle>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default JokeItem;\n","import styled from 'styled-components';\n\nexport const CategoryItem = styled.h4`\n\ttext-transform: capitalize;\n\tfont-weight: bold;\n\tmargin: .3em;\n\tpadding: .2em;\n\tfont-size: 0.9rem;\n\ttransition: background 300ms linear;\n    &:hover,\n    &:focus {\n\t\tbackground: var(--color-grey-lt);\n\t}\n`;\n\nexport const CategoryLink = styled.a`color: rgba(0, 0, 0, 0.5);`;\n","import React, { useContext } from 'react';\nimport { MyContext } from '../Home';\nimport {CategoryItem, CategoryLink} from './style'\n\nfunction Category({ data }) {\n\tconst { handleCategory } = useContext(MyContext);\n\n\tconst handleClick = (e) => {\n\t\te.preventDefault();\n\t\thandleCategory(data);\n\t};\n\treturn (\n\t\t<CategoryItem className=\"category__item\">\n\t\t\t<CategoryLink href=\"#\" onClick={handleClick}>\n\t\t\t\t{data}\n\t\t\t</CategoryLink>\n\t\t</CategoryItem>\n\t);\n}\n\nexport default Category;\n","import styled from 'styled-components';\n\nconst Title = styled.h4`\n\tborder-bottom: 1px solid var(--color-grey-md);\n\tmargin-bottom: 1em;\n\tpadding: 1em 0 .5em 0;\n`;\n\nexport default Title;\n","import React, { useContext } from 'react';\n\nimport Category from '../Category';\nimport { MyContext } from '../Home';\nimport Title from './style'\n\nfunction Categories() {\n\tconst { data, error } = useContext(MyContext);\n\n\tconst displayCategories = () => {\n\t\tif (error) return `Refresh the browser to fetch categories`;\n\t\treturn (\n\t\t\tdata &&\n\t\t\tdata.categories.map((category) => {\n\t\t\t\treturn <Category key={category} data={category} />;\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Title>Categories</Title>\n\t\t\t<ul>{displayCategories()}</ul>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Categories;\n","import styled from 'styled-components';\nimport media from '../../components/globalStyles';\n\nconst Home = styled.main`\n\tbackground-color: var(--color-white);\n\theight: calc(100vh - calc(var(--header-padding)*2));\n\tdisplay: grid;\n\tgrid: auto / 200px 1fr;\n\theight: 100vh;\n\t${media('max-width').small`\n\t\tdisplay:flex;\n\t\talign-items:flex-start;\n`};\n`;\n\nHome.Sidebar = styled.section`\n\tpadding: 1em;\n\tborder-right: 2px solid var(--color-grey-md);\n\theight: 100vh;\n\t${media('max-width').small`\n\t\tmax-width: 150px;\n`};\n`;\n\nHome.Main = styled.section`\n\theight: 100vh;\n\t${media('max-width').small`\n        display: flex;\n\t\talign-items: flex-start;\n\t\tflex-direction:column;\n`};\n`;\n\nHome.Title = styled.h2`\n\ttext-align: center;\n\tmargin: 1em 0;\n\t${media('max-width').small`\n\t\tfont-size: 1rem;\n\t\ttext-align:center;\n\t\tpadding:1em\n`};\n`;\n\nexport default Home;\n","import React, { useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport Loader from 'react-loader-spinner';\n\nimport { GET_CATEGORIES } from '../../queries';\nimport JokeItem from '../JokeItem';\nimport Categories from '../Categories';\nimport Home from './style'\n\nexport const MyContext = React.createContext();\n\nfunction MyProvider({ children }) {\n\tconst [ category, setCategory ] = useState();\n\tconst { loading, error, data } = useQuery(GET_CATEGORIES);\n\n\tconst handleCategory = (category) => {\n\t\tsetCategory(category);\n\t};\n\treturn (\n\t\t<MyContext.Provider value={{ category, loading, error, data, handleCategory }}>{children}</MyContext.Provider>\n\t);\n}\n\nfunction HomeComponent() {\n\tconst { loading } = useContext(MyContext);\n\treturn (\n\t\t<Home className=\"container\">\n\t\t\t<Home.Sidebar>\n\t\t\t\t{loading ? <Loader className=\"loader\" type=\"Bars\" color=\"rgb(255, 153, 0)\" /> : <Categories />}\n\t\t\t</Home.Sidebar>\n\t\t\t<Home.Main>\n\t\t\t\t<Home.Title>Chuck Noriss Jokes</Home.Title>\n\t\t\t\t<JokeItem />\n\t\t\t</Home.Main>\n\t\t</Home>\n\t);\n}\n\nexport default () => {\n\treturn (\n\t\t<MyProvider>\n\t\t\t<HomeComponent />\n\t\t</MyProvider>\n\t);\n};\n","import React from 'react';\nimport '../css/Header.css'\n\nfunction Header() {\n\treturn (\n        <header className=\"header\">\n            <div className=\"container center\">\n                <a className=\"header__logo\" href=\"#\">Chuck Norris<sup>JOKES</sup></a>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react'\n\nfunction NotFoundPage() {\n    return (\n        <div>\n            <h1>Error: 404 Page Not Found...</h1>\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport NotFoundPage from './components/NotFoundPage'\n\nconst Routes = () => (\n\t<Router>\n\t\t<Header />\n\t\t<Switch>\n\t\t\t<Route path=\"/home\">\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t<Route path=\"*\">\n\t\t\t\t<NotFoundPage />\n\t\t\t</Route>\n\t\t</Switch>\n\t</Router>\n);\n\nexport default Routes;\n","import React from 'react';\nimport  ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport Routes from './routes';\n\n// Apollo client\nconst client = new ApolloClient({\n\turi:'/graphql'\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Routes />;\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}